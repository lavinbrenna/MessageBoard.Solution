// <auto-generated />
using System;
using MessageBoard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessageBoard.Migrations
{
    [DbContext(typeof(MessageBoardContext))]
    partial class MessageBoardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MessageBoard.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MessageBody")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            Group = "Recipes",
                            MessageBody = "This is a test",
                            MessageDate = new DateTime(2000, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 1",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 2,
                            Group = "Giveaways",
                            MessageBody = "This is another test",
                            MessageDate = new DateTime(2002, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 2",
                            UserName = "user@test.com"
                        },
                        new
                        {
                            MessageId = 3,
                            Group = "Random",
                            MessageBody = "This is another another test",
                            MessageDate = new DateTime(2003, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 3",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 4,
                            Group = "Recipes",
                            MessageBody = "This is a title",
                            MessageDate = new DateTime(2004, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 4",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 5,
                            Group = "Giveaways",
                            MessageBody = "This is another title",
                            MessageDate = new DateTime(2005, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 5",
                            UserName = "user@test.com"
                        },
                        new
                        {
                            MessageId = 6,
                            Group = "Random",
                            MessageBody = "This is another another title",
                            MessageDate = new DateTime(2006, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 6",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 7,
                            Group = "Recipes",
                            MessageBody = "This is a test",
                            MessageDate = new DateTime(2000, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 1",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 8,
                            Group = "Giveaways",
                            MessageBody = "This is another test",
                            MessageDate = new DateTime(2002, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 2",
                            UserName = "user@test.com"
                        },
                        new
                        {
                            MessageId = 9,
                            Group = "Random",
                            MessageBody = "This is another another test",
                            MessageDate = new DateTime(2003, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 3",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 10,
                            Group = "Recipes",
                            MessageBody = "This is a title",
                            MessageDate = new DateTime(2004, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 4",
                            UserName = "user2@test.com"
                        },
                        new
                        {
                            MessageId = 11,
                            Group = "Giveaways",
                            MessageBody = "This is another title",
                            MessageDate = new DateTime(2005, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 5",
                            UserName = "user@test.com"
                        },
                        new
                        {
                            MessageId = 12,
                            Group = "Random",
                            MessageBody = "This is another another title",
                            MessageDate = new DateTime(2006, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Test 6",
                            UserName = "user2@test.com"
                        });
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.HasOne("MessageBoard.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
